// complex.cpp - определение класса "комплексное число"
//goods.cpp - класс "Товары на складе магазина"
// member.cpp - определение функций класса member
// p10-01.cpp - наследование классов и их деструкторы
// p10-02.cpp - окружность в квадрате множественное наследование
// p10-02.cpp - окружность в квадрате множественное наследование
// p10-04.cpp - множественное наследование с виртуальным базовым классом
// p10-05.cpp - одинаковые функции в базовом и производном классах
// p10-06.cpp - виртуальная функция в базовом классе
// p10-07.cpp - некоторые особенности виртуальных функций
//Р10-08.СРР - абстрактные классы и чистые виртуальные функции
// p10-09.cpp - односвязный список объектов разных классов
//p1-02.cpp - имя файла с программой
//p11-19.cpp - запись структур в файл перегруженной операцией <<
//P2-01.cpp - sizeof()
//p2-02 - размеры памяти для вещественных констант
//p2-03 - использование кодов символьных констант
//p2-04 - длины внутренних представлений символьных констант
//p2-05.cpp - строки с escape-последовательностями
//p2-06.cpp - конкатенация строк
//p2-07.cpp - инициализация массива строкой константой
//p2-08.cpp - длины строк символьных констант (литер)
//p2-09.cpp - размеры данных разных типов
//p2-10.cpp - операции сдвига и поразрядные операции
//p2-11.cpp - операции отношения и логические операции
//p2-12.cpp - операции присваивания
//p2-13.cpp - изменение видимости внешней переменной
//p2-14.cpp - запятая в качестве операции
//p2-15.cpp - работа с элементами массива
//p2-15if.cpp - условная операция
//p2-16.cpp - динамическое распределение памяти
// p2-16[].cpp - разделители и другие знаки
//p2-17.cpp - фигурные скобки в структуре и при ее инициализации
//p2-18.cpp - запятая как разделитель и как знак операция
//p3-01.cpp - размеры разных типов данных
//p3-02.cpp - сфера действия формальных параметров прототипа
//p3-03.cpp - область действия глобальных имён
//p3-04.cpp - переопределение внешнего имени внутри блока
//p3-05.cpp - переопределение внешнего имени внутри блока
//p3-06.cpp - доступ из функции к внешнему объекту, имя которого переопределено в теле функции
//p3-07.cpp - файл с текстом программы (модуль)
//p3-08.cpp - инициализация и существование локальных статических объектов
//p3-09.cpp - динамическое выделение памяти для объектов
//p3-10.cpp - определения и функции расределены по трём файлам
//p3-11.cpp - определения и описания переменных
//p3-12.cpp - обмен между функциями через внешние переменные
//p3-14.cpp - порядок вычисления физических параметров
//p3-16.cpp - потери информации при преобразовании типов
//p4-01.cpp - обращение к функции как оператор-выражение
//p4-02.cpp - названия нечётных целых цифрб не меньших заданной
//p4-03.cpp - вложение циклов
//p4-04.cpp - оператор break в переключателе
//p4-05.cpp - break при вложении переключателя в цикл
//p5-01.cpp - проверка типа компьютера (обращение к байту памяти)
//p5-02.cpp - указатель-константа на байт состояния клавиатуры
//p5-03.cpp - выбор данных из памяти с помощью разных указателей
//p5-04.cpp - неявное приведение типа void * к стандартным типам
//p5-05.cpp - вычитание указателей
//p5-06.cpp - вычитание адресов и указателей разных типов
//p5-07.cpp - увеличение указателя
//p5-08.cpp - изменения указателей на произвольную величину
//p5-09.cpp - адреса и длины указателей разных типов
//p5-10.cpp - цепочка указателей на указатели
//p5-11.cpp - приоритеты унарных операций
//p5-12.cpp - работа с элементами массива без скобок []
//p5-13.cpp - коммутативность сложения
//p5-14.cpp - адреса массивов и использование указателей для доступа
//p5-15.cpp - копирование массивов-строк
//p5-16.cpp - адреса элементов многомерных массивов
//p5-17.cpp - многомерные массивы - доступ по указателям
//p5-18.cpp - перестановка указателей на одномерные массивы
//p5-19.cpp - выделение и освобождение памяти для массива
//p5-20.cpp - единичная диагональная матрица с изменяемым порядком
//p5-21.cpp - представление "дальних" (far) указателей
//p5-22.cpp - сравнение и аддитивные операции с far-указателями
//p5-23.cpp - сегментная и относительная части far-указателей
//p5-24.cpp - нормализованные указатели - обращение к памяти
//p5-25.cpp - некоторые особенности сегментных указателей
//p6-01.cpp - определения, прототипы и вызовы функций
//p6-02.cpp - заданное количество необязательных параметров
//p6-03.cpp - индексация конца переменного списка параметров
//p6-04.cpp - меняются тип и количество параметров функции
//p6-04-modern.cpp - меняются тип и количество параметров функции
//p6-05.cpp - макросредства для переменного списка параметров
//p6-06.cpp - упрощенный аналог printf()
//p6-07.cpp - рекурсия при определении корня математической функции
//x6-08.cpp - массивы строки в качестве параметров
//p6-09.cpp - одномерные массивы в качестве параметров
//p6-10.cpp - указатели на одномерные массивы в качестве параметров
//p6-11.cpp - функция, которая возвращает указатель на массив
//p6-12.cpp - многомерный массив в качестве параметра
//p6-13.cpp - вспомогательный массив указателей на массивы
//p6-14.cpp - матрица как набор одномерных массивов
//p6-15.cpp - единичная диагональная матрица с изменяемым порядком
//p6-16.cpp - создание матрицы по заданной матрице
//p6-17.cpp - определение и использование указателей на функции
//p6-18.cpp - вызов функций по адресам через указатель
//p6-19.cpp - массив указателей на функции
//p6-20.cpp - указатель на функцию как параметр функции
//p6-21.cpp - упорядочение с помощью библиотечной функции qsort()
//p6-22.cpp - обращение к значению переменной по ссылке
//p6-23.cpp - сравнение ссылок с указателями в качестве параметров
//p6-24.cpp - праводопустимые выражения в качестве параметров
//p6-25.cpp - ссылка и указатель на функцию
//p6-26.cpp - ссылка и указатель на функцию
//p6-27.cpp - вложенные вызовы функций, возвращающих ссылки
//p6-28.cpp - ссылки на элементы "двухмерных" массивов
//p6-29.cpp - перегрузка функций
//p6-30.cpp - шаблон функции для поиска в массиве
//p6-31.cpp - параметр шаблона и внешняя переменная с тем же именем
//p6-32.cpp - прототип шаблона для семейства функций
//p7-01.cpp - библиографическая картотека - двухсвязный список
//p7-02.cpp - размещение в памяти элементов структуры
//p7-03.cpp - размещение в памяти объединения
//p7-04.cpp - объединение выделяет scan и ASCII-коды клавиш
//p7-05.cpp - битовые поля, структуры, объединения
//p7-05.cpp - битовые поля, структуры, объединения
//p8-00.cpp - пример работы с препроцессорными командами
//p8-01.cpp - препроцессорное формирование текста программы
//p8-02.cpp - особенности макроопределений с параметрами
//09-01.cpp - массив объектов класса goods
//p9-02.cpp - программа с классом "символьные строки"
//p9-03-1.cpp - вызов компонентной функции через указатель на объект класса и указатель на компонентную функцию
//p9-03.cpp - статические компоненты класса
//p9-04.cpp - работа с классом "точка на экране"
//p9-05.cpp - указатель "this"
//p9-06.cpp - статические компоненты, указатель this
//p9-07.cpp - класс с дружественной функцией
//p9-08.cpp - классы с общей дружественной функцией
//p9-09.cpp - дружественные классы
//p9-10.cpp - расширение действия (перегрузка) операции "+"
//p9-11.cpp - компонентная функция для перегрузки операции '+'
//p9-12.cpp - операция-функция как дружественная функция
//p9-13.cpp - перегрузка унарных операций ++ и -- 
//p9-14.cpp - необычная перегрузка унарных операций ++ и -- 
//point.cpp - внешнее определение класса
//spot.cpp - класс, наследующий данные и методы класса point
//stroka.cpp - файл с определением класса "символьная строка"
//p8-00.cpp - тестовый пример
